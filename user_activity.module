<?php
/* $Id$ */

/**
 * @file
 * Calculates and displays a user's activity index.
 * 
 * @author
 * Stefan Auditor <stefan.auditor@erdfisch.de>
 */

DEFINE('USER_ACTIVITY_PERIOD', 3600*24*30);

/**
 * Implementation of hook_user();
 */
function user_activity_user($op, &$edit, &$account, $category = NULL) {
  global $user;
  
  switch ($op) {
    case 'login':
      user_activity_login_count($user);
      break;
    case 'view':
      $items['user_activity'] = array(
        'title' => t('Latest activity'),
        'value' => theme('user_activity_o_meter', $account->user_activity_index),
        'class' => 'user-activity',
      );
      return array(t('Activity') => $items);
      break;
    case 'load':
      $account->user_activity_index = user_activity_index_calculate($account);
      break;
  }
}

/**
 * Implementation of hook_exit();
 */
function user_activity_exit($destination = NULL) {
  global $user;
  
  if ($user->uid) {
    user_activity_pi_count($user);
  }
  
  user_activity_maintenance();
}

/**
 * Count a user's logins
 * @param $user a user object
 */
function user_activity_login_count($user) {
  if (!db_result(db_query("SELECT COUNT(uid) AS count FROM {user_activity} WHERE uid=%d", $user->uid))) {
    user_activity_set($user);
  }
  else {
    db_query("UPDATE {user_activity} SET logins=logins+1 WHERE uid=%d", $user->uid);
  }
}

/**
 * Count a user's page impressions
 * @param $user a user object
 */
function user_activity_pi_count($user) {
  if (!db_result(db_query("SELECT COUNT(uid) AS count FROM {user_activity} WHERE uid=%d", $user->uid))) {
    user_activity_set($user);
  }
  else {
    db_query("UPDATE {user_activity} SET pis=pis+1 WHERE uid=%d", $user->uid);
  }
}

/**
 * First time
 * @param $user a user object
 */
function user_activity_set($user) {
  db_query("INSERT INTO {user_activity} (uid, pis, logins, since) VALUES (%d, 1, 1, %d)", $user->uid, time());
}

/**
 * Get a user's page impressions
 * @param $user a user object
 * @return an integer representing the total of a user's page impressions
 */
function user_activity_pis($user) {
  return db_result(db_query("SELECT pis FROM {user_activity} WHERE uid=%d LIMIT 1", $user->uid));
}

/**
 * Get a user's logins
 * @param $user a user object
 * @return an integer representing the total of a user's logins
 */
function user_activity_logins($user) {
  return db_result(db_query("SELECT logins FROM {user_activity} WHERE uid=%d LIMIT 1", $user->uid));
}

/**
 * Maintenance
 * TODO:
 * Check the database for old values and update to keep the db slim
 */
function user_activity_maintenance() {
  //TODO: database maintenance to keep the db small
}

/**
 * Calculate a user's activity index based on logins, page impressions and authorship
 * @param $user a user object
 * @return an integer representing a percentage 
 */
function user_activity_index_calculate($user) {
  //TODO: make calculation time dependant to get more accurate results

  //Get maximum logins/pis/nodes
  $max->logins    = db_result(db_query("SELECT logins FROM {user_activity} ORDER BY logins DESC LIMIT 1"));
  $max->logins    = $max->logins ? $max->logins : 1;
  $max->pis       = db_result(db_query("SELECT pis FROM {user_activity} ORDER BY pis DESC LIMIT 1"));
  $max->pis       = $max->pis ? $max->pis : 1;
  $max->nodes     = db_result(db_query("SELECT COUNT(*) AS count FROM {node} GROUP BY uid ORDER BY count(*) DESC LIMIT 1"));
  $max->nodes     = $max->nodes ? $max->nodes : 1;
  $max->comments  = db_result(db_query("SELECT COUNT(*) AS count FROM {comments} GROUP BY uid ORDER BY count(*) DESC LIMIT 1"));
  $max->comments  = $max->comments ? $max->comments : 1;
  
  //Get user's logins/pis/nodes
  $user->logins   = db_result(db_query("SELECT logins FROM {user_activity} WHERE uid=%d", $user->uid));
  $user->logins   = $user->logins ? $user->logins : 1;
  $user->pis      = db_result(db_query("SELECT pis FROM {user_activity} WHERE uid=%d", $user->uid));
  $user->pis      = $user->pis ? $user->pis : 1;
  $user->nodes    = db_result(db_query("SELECT COUNT(*) AS count FROM {node} WHERE uid=%d", $user->uid));
  $user->nodes    = $user->nodes ? $user->nodes : $user->nodes;
  $user->comments = db_result(db_query("SELECT COUNT(*) AS count FROM {comments} WHERE uid=%d", $user->uid));
  $user->comments = $user->comments ? $user->comments : 1;
  
  //Calculate percentages
  $percentage->logins   = ($user->logins/$max->logins)*100;
  $percentage->pis      = ($user->pis/$max->pis)*100;
  $percentage->nodes    = ($user->nodes/$max->nodes)*100;
  $percentage->comments = ($user->comments/$max->comments)*100;
  
  //Calculate activity index
  $activity_index = ($percentage->logins+$percentage->pis+$percentage->nodes)/3;
  
  return round($activity_index);
}

/**
 * Display a percentage meter
 * @param index a integer value representing a percentage
 * @return a percentage meter in html
 */
function theme_user_activity_o_meter($index) {
  $output = '
  <div class="user_activity_o_meter" style="width:100%;height:20px;background-color:#C3D9FF;">
    <div style="width:'. $index .'%;height:20px;background-color:#6BBA70;color:white;text-align:center;"></div>
    <div style="margin-top:-20px;text-align:center;">'. $index .'%</div>
  </div>';
  
  return $output;
}

/**
 * Implementation of hook_uninstall();
 */
function user_activity_uninstall() {
  db_query('DROP TABLE {user_activity}');
}





